///brutes solution
class Solution {
  public:
    vector<int> sumTriangles(vector<vector<int>>& mat) {
        int m=mat.size();
       



vector<int> ans;
        int lowersum=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<=i;j++){
                lowersum +=mat[i][j];
            }
        }
        ans.push_back(lowersum);
        
        int uppersum=0;
        for(int i=0;i<m;i++){
            for(int j=m-1;j>=i;j++){
                uppersum+=mat[i][j];
            }
        }
        ans.push_back(uppersum);
        // code here
        return ans;
        
    }
};


//optimoize solution

  vector<int> sumTriangles(vector<vector<int>>& mat) {
        int m=mat.size();
        
            
            int n=mat[0].size();
            vector<int> ans;
            
            int lowersum=0;
            int uppersum=0;
            
            for(int i=0;i<m;i++){
                for(int j=0;j<n;j++){
                    if(i>=j){
                        lowersum +=mat[i][j];
                    }
                    if(j>=i){
                        uppersum +=mat[i][j];
                    }
                
            }
        }
        return {(int)uppersum,(int)lowersum};
    }
};
