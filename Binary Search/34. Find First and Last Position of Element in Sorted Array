class Solution {
public:

int firstOcc(vector<int> &arr,int n,int tar){
    int ans=-1;
    int low=0;
    int high=n-1;
    while(low<=high){
        int mid = (low+high)/2;
        if(arr[mid]>=tar){
            if (arr[mid] == tar) ans = mid;
            high=mid-1;
        }
        else{
            low=mid+1;
        }
    }
    return ans;
}

int lastOcc(vector<int> &arr,int n,int tar){
    int ans=-1;
    int low=0;
    int high=n-1;
    while(low<=high){
        int mid = (low+high)/2;
        if(arr[mid]<=tar){
            if (arr[mid] == tar) ans = mid;
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return ans;
}

vector<int> searchRange(vector<int>& nums, int target) {
    int f = firstOcc(nums, nums.size(), target);
    int l = lastOcc(nums, nums.size(), target);
    return {f, l};
}
};
